-- 산술연산자
SELECT *
FROM EMP
WHERE SAL * 12 = 36000;

-- 비교연산자
SELECT *
FROM EMP
WHERE SAL >= 3000;

-- 문자비교
SELECT *
FROM EMP
WHERE ENAME >= 'F';

SELECT *
FROM EMP
WHERE ENAME <= 'FORZ';

SELECT *
FROM EMP
WHERE ENAME <= 'FORC';

-- 부정연산자
SELECT *
FROM EMP
WHERE SAL != 3000;  -- SAL이 3000이 안된다

SELECT *
FROM EMP
WHERE SALE <> 3000;

SELECT *
FROM EMP
WHERE SAL ^= 3000;

-- NOT 부정연산자
SELECT *
FROM EMP
WHERE NOT SAL = 3000;

-- IN 연산자
SELECT *
FROM EMP
WHERE JOB = 'MANAGER'
 OR JOB = 'SALESMAN'
 OR JOB = 'CLERK';
 
SELECT *
FROM EMP
WHERE JOB IN('MANAGER', 'SALESMAN', 'CLERK');

SELECT *
FROM EMP
WHERE JOB = 'MANAGER'
AND JOB <> 'SALESNEB'
AND JOB ^= 'CLERK';

--NOT IN 연산자 : 논리 부정 연산자
SELECT *
FROM EMP
WHERE NOT JOB IN('MANAGER', 'SLAESMAN', 'CLERK')


-- BETWEEN A AND B
SELECT *
    FROM EMP
    WHERE SAL BETWEEN 2000 AND 3000;

SELECT *
FROM EMP
WHERE SAL NOT BETWEEN 2000 AND 3000;

-- LIKE 연산자, 와일드 카드(%)
-- 첫번재 단어 글자가 S로 시작하는 사람
SELECT *
FROM EMP
WHERE ENAME LIKE 'S%';

-- LIKE 연산자, 와일드 카드
-- 두번쨰 단어 글자가 L로 시작하는 사람
SELECT *
FROM EMP
WHERE ENAME LIKE '_L%';

SELECT *
FROM EMP
WHERE ENAME LIKE '%AM%';

-- NULL 은 '현재 무슨 값인지 확저되지 않은 상태' 혹은 '값 자체가 존재하지 않는 상태'
-- 100 + NULL = NULL
-- NULL > 100 = NULL 무슨 값인지 모르는 값과 연산해도 무슨 값인지 모르는 결과 값을 갖는다
-- NULL 과 사칙연산/비교연산 결과는 NULL
SELECT ENAME, SAL, SAL*12+COMM AS ANNSAL, COMM
FROM EMP;

-- NULL 값 여부를 물을 때 이런식으로 하면 출력값이 없다
SELECT *
FROM EMP
WHERE COMM = NULL; -- > NULL , 출력값이 없다.

-- IS NULL
SELECT *
FROM EMP
WHERE COMM IS NULL; -- COMM이 NULL인 행만 추출

-- IS NOT NULL : 결측치 제거하고 출력
SELECT *
FROM EMP
WHERE COMM IS NOT NULL; -- COMM이 NULL이 아닌 행만 추출

-- NULL과 AND/OR 연산 : 결과가 반드시 NULL이 아니다
SELECT *
FROM EMP
WHERE SAL > NULL  -- NULL
AND COMM IS NULL; -- TRUE 즉, NULL AND TURE = NULL 값이 나온다

SELECT *
FROM EMP
WHERE SAL > NULL  -- NULL
OR COMM IS NULL   -- NULL OR TRUE 최종 결과는 TRUE

-- 집합연산자 : UNION(합집합), MINUS(차집합), INTERSECT(교집합)

-- UNION : 중복된 데이터는 삭제
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 20;

-- UNION ALL : 중복된 데이터를 삭제하지 않음
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 10
UNION ALL
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 10;
    
-- MINUS(차집합)
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
MINUS
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 10;

-- INTERSECT(교집합)
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
INTERSECT
SELECT EMPNO, ENAME, SAL, DEPTNO
    FROM EMP
    WHERE DEPTNO = 10;


-- P.125
-- Q1
SELECT *
FROM EMP
WHERE ENAME LIKE '%S';

-- Q2
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 30
AND JOB = 'SALESMAN';

-- Q3 -1
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO IN (20, 30)
AND SAL > 2000;

-- Q3 -2
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 20
AND SAL > 2000
UNION
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 30
AND SAL > 2000

-- Q4
SELECT *
FROM EMP
WHERE SAL < 2000
OR SAL > 3000;

-- Q5
SELECT ENAME, EMPNO, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 30
AND ENAME LIKE '%E%'
AND SAL NOT BETWEEN 1000 AND 2000;

-- Q6
SELECT *
FROM EMP
WHERE COMM IS NULL
AND MGR IS NOT NULL
AND JOB IN ('MANAGER', 'CLERK')
AND ENAME NOT LIKE '_L%';